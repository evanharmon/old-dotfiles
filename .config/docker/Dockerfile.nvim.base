# BINARIES
FROM eph-bin/base:latest as bins

# PYTHON VERSIONS
FROM eph-python/base:latest as python

# BASE NEOVIM
FROM amazonlinux

ENV HOME /root
ENV PYENV_ROOT=$HOME/.pyenv PYENV_VERSION='2.7.14' PYENV_VERSION3='3.5.5' PYENV2_NAME=v2 PYENV3_NAME=v3 PYENV_VIRTUALENV_DISABLE_PROMPT=1
ENV PATH=$PYENV_ROOT/shims:$PYENV_ROOT/bin:$PATH
ENV TERM=xterm-256color

# Home Directories
RUN mkdir $HOME/.local
RUN mkdir $HOME/.cache

# Dependencies
WORKDIR /root
RUN yum groupinstall -y 'Development Tools'
RUN yum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
RUN yum install -y tree readline-devel bzip2-devel sqlite-devel openssl-devel \
  awscli nodejs

RUN amazon-linux-extras install golang1.11 rust1 vim

COPY --from=bins /root/bin /root/bin
COPY --from=python /root/.pyenv /root/.pyenv

# ZSH SETUP
RUN yum install -y zsh
ENV ZSH=$HOME/.config/zsh
RUN git clone git://github.com/zsh-users/zsh-completions.git $HOME/zsh-completions
RUN git clone https://github.com/zsh-users/zsh-syntax-highlighting.git

# NEOVIM
ARG NVIM_VERSION='nvim-linux64'
ENV PATH $HOME/bin/$NVIM_VERSION/bin:$PATH
RUN curl -fLo $HOME/.cache/$NVIM_VERSION.tar.gz \
  https://github.com/neovim/neovim/releases/download/v0.3.4/$NVIM_VERSION.tar.gz && \
    tar -xzf $HOME/.cache/$NVIM_VERSION.tar.gz -C $HOME/bin
## NEOVIM Plugins
RUN curl -fLo $HOME/.local/share/nvim/site/autoload/plug.vim --create-dirs \
    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim

# FNM & NPMS
ENV DK_NODE_VERSION "v11.10.1"
ENV PATH $HOME/.fnm:$HOME/.fnm/current/bin:$HOME/.fnm/node-versions/$DK_NODE_VERSION/installation/bin:$PATH
RUN curl https://raw.githubusercontent.com/Schniz/fnm/master/.ci/install.sh | bash
RUN /bin/bash -c 'export PATH=$HOME/.fnm:$PATH; eval `fnm env --multi`; \
  fnm install $DK_NODE_VERSION; $HOME/.fnm/fnm use $DK_NODE_VERSION;'
RUN npm install --global --allow-root --unsafe-perm=true \
    pure-prompt \
    add neovim vim-node-rpc \
    prettier \
    typescript \
    bash-language-server \
    javascript-typescript-langserver \
    serverless \
    dockerfile-language-server-nodejs

# GOLANG
RUN go get -u github.com/saibing/bingo && \
    go get -u github.com/derekparker/delve/cmd/dlv

# RUST
ENV PATH $HOME/.cargo/bin:$PATH
RUN curl -Lo $CACHE/rustup.sh https://sh.rustup.rs -sSf && cat $CACHE/rustup.sh | sh -s -- -y
RUN rustup component add rustfmt rls-preview rust-analysis rust-src
RUN curl -sL https://rpm.nodesource.com/setup_11.x | bash -

# RUBY
ENV PATH $HOME/.rbenv/shims:$HOME/.rbenv/bin:$PATH
ENV RBENV_VERSION=2.6.0
RUN curl -fsSL https://github.com/rbenv/rbenv-installer/raw/master/bin/rbenv-installer | bash
RUN /bin/sh -c 'rbenv install $RBENV_VERSION; rbenv global $RBENV_VERSION; gem install neovim'

# DOTFILES
RUN rm $HOME/.bashrc
RUN echo "dotfiles commit 37f3e8eb6abc49e5f983a507fa9d1a33defa8b07"
RUN git init --bare $HOME/.dotfiles
RUN /bin/sh -c "\
    /usr/bin/git --git-dir=$HOME/.dotfiles/ --work-tree=$HOME config --local status.showUntrackedFiles no; \
    /usr/bin/git --git-dir=$HOME/.dotfiles/ --work-tree=$HOME remote add origin https://github.com/evanharmon/dotfiles.git; \
    /usr/bin/git --git-dir=$HOME/.dotfiles/ --work-tree=$HOME pull origin master;"

RUN git config --global user.name "Evan Harmon" && \
    git config --global user.email "evan.p.harmon@gmail.com"

# Lastly, install plugins for editors
RUN nvim --headless +PlugInstall +UpdateRemotePlugins +qall

CMD ["zsh", "-l"]
