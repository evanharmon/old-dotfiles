ARG BASE_FROM=alpine:latest
FROM $BASE_FROM
LABEL maintainer="Evan Harmon <evan.p.harmon@gmail.com>"

ENV HOME /root
ENV BIN_DIR $HOME/bin
ENV CACHE_DIR $HOME/.cache

WORKDIR /root

RUN apk add curl wget tar git bash unzip

RUN mkdir $BIN_DIR && \
    mkdir $CACHE_DIR

# BAT
ARG BAT_VERSION='bat-v0.10.0-x86_64-unknown-linux-gnu'
RUN curl -Lo $CACHE_DIR/$BAT_VERSION.tar.gz \
    https://github.com/sharkdp/bat/releases/download/v0.10.0/$BAT_VERSION.tar.gz && \
    tar -xzf $CACHE_DIR/$BAT_VERSION.tar.gz -C $CACHE_DIR && \
    mv $CACHE_DIR/$BAT_VERSION/bat $BIN_DIR/

# FZF
RUN git clone --depth 1 https://github.com/junegunn/fzf.git $BIN_DIR/.fzf && \
    $BIN_DIR/.fzf/install --no-update-rc --no-fish --no-bash

# JQ
ARG JQ_VERSION='https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64'
RUN curl -qLo $CACHE_DIR/jq $JQ_VERSION && \
    chmod +x $CACHE_DIR/jq && \
    mv $CACHE_DIR/jq $BIN_DIR

# FD
ARG FD_VERSION='fd-v7.3.0-x86_64-unknown-linux-gnu'
RUN curl -Lo $CACHE_DIR/$FD_VERSION.tar.gz \
    https://github.com/sharkdp/fd/releases/download/v7.3.0/$FD_VERSION.tar.gz && \
    tar -xzf $CACHE_DIR/$FD_VERSION.tar.gz -C $CACHE_DIR && \
    mv $CACHE_DIR/$FD_VERSION/fd $BIN_DIR

# TERRAFORM
ARG TF_DOWNLOAD_LINK="https://releases.hashicorp.com/terraform/0.11.11/terraform_0.11.11_linux_amd64.zip"
RUN curl -Lo $CACHE_DIR/terraform.zip $TF_DOWNLOAD_LINK && \
    unzip $CACHE_DIR/terraform.zip -d $BIN_DIR && chmod +x $BIN_DIR/terraform

# TERRAFORM PLUGINS
ENV PLUGINS_DIR $HOME/bin/terraform-plugins
ARG TF_AWS="terraform-provider-aws_1.58.0_linux_amd64.zip"
ARG TF_AWS_DOWNLOAD_LINK="https://releases.hashicorp.com/terraform-provider-aws/1.58.0/terraform-provider-aws_1.58.0_linux_amd64.zip"
RUN mkdir -p $PLUGINS_DIR && \
    curl -Lo $CACHE_DIR/$TF_AWS $TF_AWS_DOWNLOAD_LINK && \
    unzip $CACHE_DIR/$TF_AWS -d $PLUGINS_DIR

# C++ Tools
ARG NINJA_VERSION='ninja-linux'
RUN curl -Lo $CACHE_DIR/$NINJA_VERSION.zip \
    https://github.com/ninja-build/ninja/releases/download/v1.9.0/$NINJA_VERSION.zip && \
    unzip $CACHE_DIR/$NINJA_VERSION.zip -d $BIN_DIR && chmod +x $BIN_DIR/ninja

# RIPGREP
ARG RG_VERSION="11.0.1"
ARG RG_TAR_NAME="ripgrep-$RG_VERSION-x86_64-unknown-linux-musl"
ARG RG_DOWNLOAD_LINK="https://github.com/BurntSushi/ripgrep/releases/download/$RG_VERSION/$RG_TAR_NAME.tar.gz"
RUN curl -Lo $CACHE_DIR/$RG_TAR_NAME.tar.gz \
    "$RG_DOWNLOAD_LINK" && \
    tar -xzf $CACHE_DIR/$RG_TAR_NAME.tar.gz -C $CACHE_DIR && \
    mv $CACHE_DIR/$RG_TAR_NAME/rg $BIN_DIR

# KUBECTL
RUN curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl && \
    chmod +x ./kubectl && \
    mv ./kubectl $BIN_DIR/kubectl

# HELM / TILLER
ARG HELM_ARCH='linux-amd64'
ARG HELM_VERSION="v2.14.1"
ARG HELM_TAR_NAME="helm-${HELM_VERSION}-${HELM_ARCH}.tar.gz"
RUN curl -Lo $CACHE_DIR/$HELM_TAR_NAME https://get.helm.sh/$HELM_TAR_NAME && \
    tar -zxf $CACHE_DIR/$HELM_TAR_NAME -C $CACHE_DIR && \
    mv $CACHE_DIR/$HELM_ARCH/helm $BIN_DIR && \
    mv $CACHE_DIR/$HELM_ARCH/tiller $BIN_DIR

# AWS CLIs
## https://docs.aws.amazon.com/eks/latest/userguide/install-aws-iam-authenticator.html
ARG AUTH_VERSION="1.13.7"
ARG AUTH_DATE="2019-06-11"
ARG AUTH_NAME="aws-iam-authenticator"
ARG AUTH_DOWNLOAD_LINK="https://amazon-eks.s3-us-west-2.amazonaws.com/$AUTH_VERSION/$AUTH_DATE/bin/linux/amd64/$AUTH_NAME"
RUN curl -Lo $CACHE_DIR/$AUTH_NAME "$AUTH_DOWNLOAD_LINK" && \
    mv $CACHE_DIR/$AUTH_NAME $BIN_DIR && \
    chmod +x $BIN_DIR/$AUTH_NAME

# K8s Tools
ARG STERN_VERSION="1.10.0"
ARG STERN_NAME="stern_linux_amd64"
ARG STERN_DOWNLOAD_LINK="https://github.com/wercker/stern/releases/download/$STERN_VERSION/$STERN_NAME"
RUN curl -sLo "$CACHE_DIR/stern" "$STERN_DOWNLOAD_LINK" && \
    mv "$CACHE_DIR/stern" $BIN_DIR && \
    chmod +x $BIN_DIR/stern

ARG SKAFFOLD_ARCH="skaffold-linux-amd64"
ARG SKAFFOLD_DOWNLOAD_LINK="https://storage.googleapis.com/skaffold/releases/latest/$SKAFFOLD_ARCH"
RUN curl -sLo "$CACHE_DIR/skaffold" "$SKAFFOLD_DOWNLOAD_LINK" && \
    mv "$CACHE_DIR/skaffold" $BIN_DIR && \
    chmod +x $BIN_DIR/skaffold

# TFSWITCH
RUN curl -LO "https://raw.githubusercontent.com/warrensbox/terraform-switcher/release/install.sh" && \
    bash install.sh -b /root/bin

# LAST Ensure ownership of binaries
RUN chown -R root:root $BIN_DIR
